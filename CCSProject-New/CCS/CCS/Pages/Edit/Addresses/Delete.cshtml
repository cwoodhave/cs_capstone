@page
@model CCS.Pages.Edit.Addresses.DeleteModel

@{
    ViewData["Title"] = "Delete";
    Layout = "~/Pages/Shared/_FormLayout.cshtml";
}


<div id="app">
    <div class="container-list">
        <div class="text-align-center">
            Delete An Address
        </div>
       
        <div class="containerSize">
            <form method="post">
                <div asp-validation-summary="All" class="text-danger valid-warning"></div>
                <div class="form-group">
                    <label for="id" class="control-label">Select an address to delete:</label>
                    <vue-multiselect v-model="address" track-by="fullAddress" label="fullAddress" accesskey="id" style="padding: 0;"
                                        placeholder="Select An Address" :options="addresses" :class="[address === null ? 'is-invalid' : 'containerColor', 'form-control']" :searchable="true"></vue-multiselect>
                    <input type="hidden" id="id" name="id" v-model="addressFixed" />
                </div>

                <hr class="createHr" />

                <div class="row">
                    <div class="col-md-6 mb-3">
                        <input type="submit" value="Delete" class="btn btn-danger btn-lg btn-block" />
                    </div>

                    <div class="col-md-6 mb-3">
                        <a asp-page="/Edit/Index" class="btn btn-info btn-lg btn-block">Back to List</a>
                    </div>
                </div>
            </form>
        </div>       
    </div>
 </div>



@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>

        Vue.component('vue-multiselect', window.VueMultiselect.default);

        var app = new Vue({
            el: '#app',
            data: {
                address: { id: '', fullAddress: 'Select An Address'},
                addresses: [
                    @foreach(var a in Model.Addresses)
                    {
                        @:{
                        @:  id: '@a.AddressID',
                        @:  fullAddress: '@a.StreetAddress1 @a.StreetAddress2 @a.CityName, @a.StateShortName @a.Zipcode'
                        @:},
                    }
                ]
            },
            computed: {
                addressFixed: function () {
                    return this.donor === null ? '' : this.address.id
                },
            }
        })
    </script>
}

